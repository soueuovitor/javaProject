    /*
 * Copyright (C) 2017 vhoa1
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package Interface;


import gamefestival.Colaborador;
import gamefestival.ColaboradorPago;
import gamefestival.GameFestival;
import static java.awt.Color.WHITE;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author vhoa1
 */
public class ColaboradorPagoRegisto extends javax.swing.JFrame {
    private GameFestival game;
    static final int MAX_INT = 9;
    private Colaborador colaborador;
    private ImprimeColaboradores listagem;
    private ArrayList<JCheckBox> boxes;
  
    
    /**
     * Creates new form ColaboradorPago
     * @param game
     * @param colaborador
     * @param listagem
     */
 
    public ColaboradorPagoRegisto(GameFestival game, Colaborador colaborador, ImprimeColaboradores listagem) {
        initComponents();
        setICon();
         getContentPane().setBackground(WHITE);
        this.game = game;
        this.colaborador = colaborador;
        this.listagem = listagem;
       
        boxes = new ArrayList<>();
        getCheck();
        printDays();

        

         
       
             if (registoNovo()) {    
            //Altera o titulo da janela
            //Como construimos sempre uma nova janela, as caixas de texto já estão limpas
            setTitle("Criação de novo Colaborador");
            nomeCP.requestFocus();                      
        }else{
            //No caso de um registo existente
            //Altera o titulo da janela
            setTitle("Alteração de dados de Colaborador");
            //Preenche as caixas de texto com os dados do utilizador
            nomeCP.setText(colaborador.getNome());
            moradaCP.setText(colaborador.getMorada());            
            funcaoCP.setText(colaborador.getFuncao());
            numTelCP.setText(colaborador.getNumTel());
           
            nifCP.setText(Long.toString(((ColaboradorPago) colaborador).getNif()));
           
            
          
        }      
    }
      
    
    private int checkBoxesSelected(){           //Ver quais das JCheckBox estão selecionadas
        int counter = 0;
        for (JCheckBox a : boxes){
            if (a.isSelected())
                counter++;
        }
        return counter;
        
    }

     private boolean registoNovo() {
        //Se utililizador == null consideramos que é um novo registo
        return colaborador == null;
    }   
    
     private void printDays(){              //Imprime as caixas no JPanel panel
        
        for (JCheckBox a : boxes)
        {
        panel.add(a);
       
        panel.repaint();
        panel.revalidate();
    
        }
         pack();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nomeCP = new javax.swing.JTextField();
        moradaCP = new javax.swing.JTextField();
        funcaoCP = new javax.swing.JTextField();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        nifCP = new javax.swing.JTextField();
        numTelCP = new javax.swing.JTextField();
        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registar Colaborador Pago");
        setResizable(false);

        jLabel2.setText("Nome:");

        jLabel3.setText("Morada:");

        jLabel4.setText("Num. Tel. :");

        jLabel5.setText("Função:");

        jLabel7.setText("NIF:");

        nomeCP.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                nomeCPComponentAdded(evt);
            }
        });
        nomeCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeCPActionPerformed(evt);
            }
        });

        jToggleButton2.setBackground(java.awt.Color.white);
        jToggleButton2.setForeground(new java.awt.Color(0, 0, 0));
        jToggleButton2.setText("Voltar");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jToggleButton3.setBackground(java.awt.Color.white);
        jToggleButton3.setForeground(new java.awt.Color(0, 0, 0));
        jToggleButton3.setText("Guardar");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        panel.setBackground(java.awt.Color.white);
        panel.setForeground(java.awt.Color.black);

        jLabel1.setText("Escolha os dias:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(funcaoCP, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nifCP, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(numTelCP, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel1))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nomeCP, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(moradaCP, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nomeCP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(moradaCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(numTelCP, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(funcaoCP))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(nifCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButton3))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nomeCPComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_nomeCPComponentAdded
        
    }//GEN-LAST:event_nomeCPComponentAdded

    private void getCheck(){            // Cria as JCheckBoxes
    
        int a = 0;
        int b = game.getListaDias().size();
        
        for (a = 0; a < b; a++){
         
            JCheckBox ga  = new javax.swing.JCheckBox() ;
            ga.setName(game.getListaDias().getDia(a).getDia().toString());
            ga.setText(game.getListaDias().getDia(a).dataFormatada());
            boxes.add(ga);
            

            
        }

    }
    
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        dispose();
       
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        submeter(); 
        listagem.atualizar();
        
                                  
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void nomeCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeCPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeCPActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField funcaoCP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JTextField moradaCP;
    private javax.swing.JTextField nifCP;
    private javax.swing.JTextField nomeCP;
    private javax.swing.JTextField numTelCP;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables




 private void setICon() {
        
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("IconImage_1.png")));
    }



private void submeter (){
    if(registoNovo()){
         
    if ( checkBoxesSelected() <= 0){
             JOptionPane.showMessageDialog(this, "Selecione pelo menos um Dia!"); 
             return;
        }
        
    if(nomeCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza o seu Nome!");            
            nomeCP.requestFocus();
            return;
    }   
    if (!(Pattern.matches("^[a-zA-Z_ ]+$", nomeCP.getText()))) {
    JOptionPane.showMessageDialog(null, "Por favor introduza um nome válido");
     nomeCP.requestFocus();
            return;
}
    

    if(moradaCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza uma Morada!");            
            moradaCP.requestFocus();
            return;
    }
   
    if(numTelCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza um numero de Telemovel!");            
            numTelCP.requestFocus();
            return;
    }
    if (!(Pattern.matches("^[0-9 +]+$", numTelCP.getText()))) {
    JOptionPane.showMessageDialog(null, "Por favor introduza um numero de telemóvel válido");
           numTelCP.requestFocus();
            return;
}
    if(funcaoCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza uma Funcao!");            
            funcaoCP.requestFocus();
            return;
    }
    
    if(nifCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza o seu NIF!");            
            nifCP.requestFocus();
            return;
    }
    if(nifCP.getText().length() > 9){
        JOptionPane.showMessageDialog(this, "Tem mais de 9 números no NIF");            
            nifCP.requestFocus();
            return;
    }
        
        String nome = nomeCP.getText();
        String morada = moradaCP.getText();
        String numTel = numTelCP.getText();
        String funcao = funcaoCP.getText();
        float  salario = game.getListaColaboradores().buscaSalario() * checkBoxesSelected();
        long nif =  Long.parseLong(nifCP.getText());
        
       ColaboradorPago colP = new ColaboradorPago();
       colP.setNome(nome);
       colP.setMorada(morada);
       colP.setNumTel(numTel);
       colP.setFuncao(funcao);
       colP.setSalario(salario);
       colP.setNif(nif);
        
        game.adicionarColaborador(colP);
        dispose();
     
    
}else{
    if ( checkBoxesSelected() <= 0){
             JOptionPane.showMessageDialog(this, "Selecione pelo menos um Dia!"); 
             return;
        }
    
    
    if(nomeCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza o seu Nome!");            
            nomeCP.requestFocus();
            return;
    }   
    if (!(Pattern.matches("^[a-zA-Z_ ]+$", nomeCP.getText()))) {
    JOptionPane.showMessageDialog(null, "Por favor introduza um nome válido");
     nomeCP.requestFocus();
            return;
}
    

    if(moradaCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza uma Morada!");            
            moradaCP.requestFocus();
            return;
    }
   
    if(numTelCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza um numero de Telemovel!");            
            numTelCP.requestFocus();
            return;
    }
    if (!(Pattern.matches("^[0-9 +]+$", numTelCP.getText()))) {
    JOptionPane.showMessageDialog(null, "Por favor introduza um numero de telemóvel válido");
           numTelCP.requestFocus();
            return;
}
    if(funcaoCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza uma Funcao!");            
            funcaoCP.requestFocus();
            return;
    }
    
    if(nifCP.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Introduza o seu NIF!");            
            nifCP.requestFocus();
            return;
    }
    if(nifCP.getText().length() > 9){
        JOptionPane.showMessageDialog(this, "Tem mais de 9 números no NIF");            
            nifCP.requestFocus();
            return;
    }
    
        
   
        

       colaborador.setNome(nomeCP.getText());
       colaborador.setMorada(moradaCP.getText());
       colaborador.setNumTel(numTelCP.getText());
       colaborador.setFuncao(funcaoCP.getText());
       ((ColaboradorPago) colaborador).setSalario(game.getListaColaboradores().buscaSalario() * checkBoxesSelected());
       ((ColaboradorPago) colaborador).setNif(Long.parseLong(nifCP.getText()));
        
        dispose();
    }
}

}
